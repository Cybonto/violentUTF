diff --git a/violentutf_api/fastapi_app/app/api/endpoints/generators.py b/violentutf_api/fastapi_app/app/api/endpoints/generators.py
index abc1234..def5678 100644
--- a/violentutf_api/fastapi_app/app/api/endpoints/generators.py
+++ b/violentutf_api/fastapi_app/app/api/endpoints/generators.py
@@ -47,23 +47,23 @@ def get_apisix_endpoint_for_model(provider: str, model: str) -> str:
     # OpenAI model mappings
     if provider == "openai":
         openai_mappings = {
-            "gpt - 4": "/ai/openai/gpt4",
-            "gpt - 3.5 - turbo": "/ai/openai/gpt35",
-            "gpt - 4 - turbo": "/ai/openai/gpt4 - turbo",
-            "gpt - 4o": "/ai/openai/gpt4o",
-            "gpt - 4o-mini": "/ai/openai/gpt4o-mini",
-            "gpt - 4.1": "/ai/openai/gpt41",
-            "gpt - 4.1 - mini": "/ai/openai/gpt41 - mini",
-            "gpt - 4.1 - nano": "/ai/openai/gpt41 - nano",
-            "o1 - preview": "/ai/openai/o1 - preview",
-            "o1 - mini": "/ai/openai/o1 - mini",
-            "o3 - mini": "/ai/openai/o3 - mini",
-            "o4 - mini": "/ai/openai/o4 - mini",
+            "gpt-4": "/ai/openai/gpt4",
+            "gpt-3.5-turbo": "/ai/openai/gpt35",
+            "gpt-4-turbo": "/ai/openai/gpt4-turbo",
+            "gpt-4o": "/ai/openai/gpt4o",
+            "gpt-4o-mini": "/ai/openai/gpt4o-mini",
+            "gpt-4.1": "/ai/openai/gpt41",
+            "gpt-4.1-mini": "/ai/openai/gpt41-mini",
+            "gpt-4.1-nano": "/ai/openai/gpt41-nano",
+            "o1-preview": "/ai/openai/o1-preview",
+            "o1-mini": "/ai/openai/o1-mini",
+            "o3-mini": "/ai/openai/o3-mini",
+            "o4-mini": "/ai/openai/o4-mini",
         }
         return openai_mappings.get(model)
 
@@ -66,14 +66,14 @@ def get_apisix_endpoint_for_model(provider: str, model: str) -> str:
     # Anthropic model mappings
     elif provider == "anthropic":
         anthropic_mappings = {
-            "claude - 3 - opus - 20240229": "/ai/anthropic/opus",
-            "claude - 3 - sonnet - 20240229": "/ai/anthropic/sonnet",
-            "claude - 3 - haiku - 20240307": "/ai/anthropic/haiku",
-            "claude - 3 - 5-sonnet - 20241022": "/ai/anthropic/sonnet35",
-            "claude - 3 - 5-haiku - 20241022": "/ai/anthropic/haiku35",
-            "claude - 3 - 7-sonnet-latest": "/ai/anthropic/sonnet37",
-            "claude-sonnet - 4 - 20250514": "/ai/anthropic/sonnet4",
-            "claude-opus - 4 - 20250514": "/ai/anthropic/opus4",
+            "claude-3-opus-20240229": "/ai/anthropic/opus",
+            "claude-3-sonnet-20240229": "/ai/anthropic/sonnet",
+            "claude-3-haiku-20240307": "/ai/anthropic/haiku",
+            "claude-3-5-sonnet-20241022": "/ai/anthropic/sonnet35",
+            "claude-3-5-haiku-20241022": "/ai/anthropic/haiku35",
+            "claude-3-7-sonnet-latest": "/ai/anthropic/sonnet37",
+            "claude-sonnet-4-20250514": "/ai/anthropic/sonnet4",
+            "claude-opus-4-20250514": "/ai/anthropic/opus4",
         }
         return anthropic_mappings.get(model)
 
@@ -168,7 +168,7 @@ async def get_generator_types(
                 "name": "model",
                 "type": "str",
                 "required": True,
-                "default": "gpt - 3.5 - turbo",
+                "default": "gpt-3.5-turbo",
                 "description": "Model name to use for generation",
                 "choices": ["Loading..."],  # Will be populated dynamically
             },
@@ -289,7 +289,7 @@ async def get_apisix_models(
                         model = "codellama"
                     elif "webui" in uri:
                         model = "llama2"
-                    # Extract model from URI like /ai/openai/gpt4 -> gpt - 4
+                    # Extract model from URI like /ai/openai/gpt4 -> gpt-4
                     elif "openai" in uri:
                         if "gpt4o-mini" in uri:
                             model = "gpt-4o-mini"
@@ -296,7 +296,7 @@ async def get_apisix_models(
                             model = "gpt-4o"
                         elif "gpt4" in uri:
                             model = "gpt-4"
-                    # Extract model from URI like /ai/anthropic/opus -> claude - 3 - opus - 20240229
+                    # Extract model from URI like /ai/anthropic/opus -> claude-3-opus-20240229
                     elif "anthropic" in uri:
                         if "opus" in uri:
                             model = "claude-3-opus-20240229"
diff --git a/violentutf_api/fastapi_app/app/services/pyrit_orchestrator_service.py b/violentutf_api/fastapi_app/app/services/pyrit_orchestrator_service.py
index 123abc..456def 100644
--- a/violentutf_api/fastapi_app/app/services/pyrit_orchestrator_service.py
+++ b/violentutf_api/fastapi_app/app/services/pyrit_orchestrator_service.py
@@ -152,8 +152,8 @@ class PyRITOrchestratorService:
             # Otherwise, check if we're in Docker and create API-specific memory
             import os
 
-            if os.path.exists("/app / app_data / violentutf"):
-                api_memory_dir = os.path.join("/app / app_data / violentutf", "api_memory")
+            if os.path.exists("/app/app_data/violentutf"):
+                api_memory_dir = os.path.join("/app/app_data/violentutf", "api_memory")
             else:
                 # For local development, use temporary directory
                 import tempfile
@@ -269,7 +269,7 @@ class PyRITOrchestratorService:
 
                     from pyrit.memory import CentralMemory, DuckDBMemory
 
-                    api_memory_dir = os.path.join("/app / app_data / violentutf", "api_memory")
+                    api_memory_dir = os.path.join("/app/app_data/violentutf", "api_memory")
                     os.makedirs(api_memory_dir, exist_ok=True)
 
                     api_memory_file = os.path.join(api_memory_dir, "orchestrator_memory.db")
diff --git a/violentutf_api/fastapi_app/app/api/endpoints/datasets.py b/violentutf_api/fastapi_app/app/api/endpoints/datasets.py
index 789abc..123def 100644
--- a/violentutf_api/fastapi_app/app/api/endpoints/datasets.py
+++ b/violentutf_api/fastapi_app/app/api/endpoints/datasets.py
@@ -806,7 +806,7 @@ def _get_pyrit_memory_paths() -> List[str]:
     # Check common PyRIT memory locations
     memory_paths = [
         "/app/app_data/violentutf",  # Docker volume
-        "/app / app_data / violentutf / api_memory",  # Docker API memory
+        "/app/app_data/violentutf/api_memory",  # Docker API memory
         "/tmp/violentutf_api_memory",  # API temporary memory
         os.path.expanduser("~/.pyrit/results"),  # User home
         "./results",  # Current directory
diff --git a/violentutf_api/fastapi_app/app/services/dataset_integration_service.py b/violentutf_api/fastapi_app/app/services/dataset_integration_service.py
index 234abc..567def 100644
--- a/violentutf_api/fastapi_app/app/services/dataset_integration_service.py
+++ b/violentutf_api/fastapi_app/app/services/dataset_integration_service.py
@@ -234,7 +234,7 @@ def _get_pyrit_memory_paths() -> List[str]:
     # Check common PyRIT memory locations
     memory_paths = [
         "/app/app_data/violentutf",  # Docker volume
-        "/app / app_data / violentutf / api_memory",  # Docker API memory
+        "/app/app_data/violentutf/api_memory",  # Docker API memory
         os.path.expanduser("~/.pyrit/results"),  # User home
         "./results",  # Current directory
         "/tmp",  # Temporary directory