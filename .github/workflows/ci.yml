name: CI Dispatcher

on:
  push:
    branches: [main, dev_*, develop]
  pull_request:
    branches: [main, dev_*, develop]
  workflow_dispatch:
    inputs:
      workflow_type:
        description: 'Workflow type to run'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - quick
          - pr-validation
          - full
          - weekly

permissions:
  contents: read
  actions: write
  pull-requests: write
  checks: write

jobs:
  # Determine which workflow to trigger based on context
  dispatch-decision:
    name: Determine Workflow
    runs-on: ubuntu-latest
    outputs:
      workflow: ${{ steps.decide.outputs.workflow }}

    steps:
      - name: Analyze context and decide workflow
        id: decide
        env:
          EVENT_NAME: ${{ github.event_name }}
          WORKFLOW_TYPE: ${{ inputs.workflow_type }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          # Check if manual dispatch with specific workflow
          if [[ "$EVENT_NAME" == "workflow_dispatch" ]] && [[ "$WORKFLOW_TYPE" != "auto" ]]; then
            echo "workflow=$WORKFLOW_TYPE" >> $GITHUB_OUTPUT
            echo "Manual dispatch: $WORKFLOW_TYPE"
            exit 0
          fi

          # Check if commit message contains special flags
          if [[ "$COMMIT_MESSAGE" == *"[full-ci]"* ]]; then
            echo "workflow=full" >> $GITHUB_OUTPUT
            echo "Full CI requested via commit message"
            exit 0
          fi

          if [[ "$COMMIT_MESSAGE" == *"[skip ci]"* ]] || \
             [[ "$COMMIT_MESSAGE" == *"[ci skip]"* ]]; then
            echo "workflow=skip" >> $GITHUB_OUTPUT
            echo "CI skipped via commit message"
            exit 0
          fi

          # Pull request logic
          if [[ "$EVENT_NAME" == "pull_request" ]]; then
            echo "workflow=pr-validation" >> $GITHUB_OUTPUT
            echo "Pull request validation workflow"
            exit 0
          fi

          # Branch-based logic
          if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            echo "workflow=full" >> $GITHUB_OUTPUT
            echo "Main branch: full CI"
          elif [[ "$GITHUB_REF" =~ ^refs/heads/dev_ ]]; then
            echo "workflow=quick" >> $GITHUB_OUTPUT
            echo "Dev branch: quick checks"
          else
            echo "workflow=pr-validation" >> $GITHUB_OUTPUT
            echo "Other branch: PR validation level"
          fi

  # Quick checks for development branches
  trigger-quick-checks:
    name: Trigger Quick Checks
    needs: dispatch-decision
    if: needs.dispatch-decision.outputs.workflow == 'quick'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger quick checks workflow
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            // Use branch name for workflow_dispatch, not SHA
            let ref;
            if (context.eventName === 'pull_request') {
              // For PRs, use the head branch name
              ref = context.payload.pull_request.head.ref;
              console.log(`Using PR head branch: ${ref}`);
            } else {
              // For other events, extract branch name from ref
              ref = context.ref.replace('refs/heads/', '');
              console.log(`Using branch name: ${ref}`);
            }

            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'quick-checks.yml',
              ref: ref
            });
            console.log(`Triggered quick-checks workflow on branch: ${ref}`);

  # PR validation for pull requests
  trigger-pr-validation:
    name: Trigger PR Validation
    needs: dispatch-decision
    if: needs.dispatch-decision.outputs.workflow == 'pr-validation'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger PR validation workflow
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            // Use branch name for workflow_dispatch, not SHA
            let ref;
            if (context.eventName === 'pull_request') {
              // For PRs, use the head branch name
              ref = context.payload.pull_request.head.ref;
              console.log(`Using PR head branch: ${ref}`);
            } else {
              // For other events, extract branch name from ref
              ref = context.ref.replace('refs/heads/', '');
              console.log(`Using branch name: ${ref}`);
            }

            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'pr-validation.yml',
              ref: ref
            });
            console.log(`Triggered pr-validation workflow on branch: ${ref}`);
  # Full CI for main branch and releases
  trigger-full-ci:
    name: Trigger Full CI
    needs: dispatch-decision
    if: needs.dispatch-decision.outputs.workflow == 'full'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger full CI workflow
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            // Use branch name for workflow_dispatch, not SHA
            let ref;
            if (context.eventName === 'pull_request') {
              // For PRs, use the head branch name
              ref = context.payload.pull_request.head.ref;
              console.log(`Using PR head branch: ${ref}`);
            } else {
              // For other events, extract branch name from ref
              ref = context.ref.replace('refs/heads/', '');
              console.log(`Using branch name: ${ref}`);
            }

            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'full-ci.yml',
              ref: ref
            });
            console.log(`Triggered full-ci workflow on branch: ${ref}`);

  # Nightly testing
  trigger-weekly:
    name: Trigger Nightly Tests
    needs: dispatch-decision
    if: needs.dispatch-decision.outputs.workflow == 'weekly'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger weekly workflow
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            // Use branch name for workflow_dispatch, not SHA
            let ref;
            if (context.eventName === 'pull_request') {
              // For PRs, use the head branch name
              ref = context.payload.pull_request.head.ref;
              console.log(`Using PR head branch: ${ref}`);
            } else {
              // For other events, extract branch name from ref
              ref = context.ref.replace('refs/heads/', '');
              console.log(`Using branch name: ${ref}`);
            }

            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'weekly.yml',
              ref: ref
            });
            console.log(`Triggered weekly workflow on branch: ${ref}`);

  # Skip notification
  skip-notification:
    name: CI Skipped
    needs: dispatch-decision
    if: needs.dispatch-decision.outputs.workflow == 'skip'
    runs-on: ubuntu-latest

    steps:
      - name: Log skip
        run: |
          echo "CI skipped as requested via commit message"
          echo "## CI Skipped" >> $GITHUB_STEP_SUMMARY
          echo "CI was skipped via [skip ci] flag in commit message" >> $GITHUB_STEP_SUMMARY

  # Summary status
  dispatcher-status:
    name: Dispatcher Status
    needs: [dispatch-decision, trigger-quick-checks, trigger-pr-validation, trigger-full-ci, trigger-weekly, skip-notification]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Summary
        run: |
          echo "## CI Dispatcher Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow Selected**: ${{ needs.dispatch-decision.outputs.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Show which workflow was triggered
          case "${{ needs.dispatch-decision.outputs.workflow }}" in
            "quick")
              echo "✅ Triggered quick development checks (5-10 minutes)" >> $GITHUB_STEP_SUMMARY
              ;;
            "pr-validation")
              echo "✅ Triggered PR validation suite (15-20 minutes)" >> $GITHUB_STEP_SUMMARY
              ;;
            "full")
              echo "✅ Triggered full CI matrix (20-30 minutes)" >> $GITHUB_STEP_SUMMARY
              ;;
            "weekly")
              echo "✅ Triggered weekly deep testing (60-90 minutes)" >> $GITHUB_STEP_SUMMARY
              ;;
            "skip")
              echo "⏭️ CI skipped as requested" >> $GITHUB_STEP_SUMMARY
              ;;
            *)
              echo "❓ Unknown workflow: ${{ needs.dispatch-decision.outputs.workflow }}" >> $GITHUB_STEP_SUMMARY
              ;;
          esac
