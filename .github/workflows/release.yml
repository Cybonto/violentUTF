name: Release Pipeline

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  # Validate version and run tests
  validate:
    name: Validate Release
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.version }}
      release_notes: ${{ steps.notes.outputs.release_notes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v5.0.0
        with:
          fetch-depth: 0

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Validate version format
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Error: Invalid version format. Expected: X.Y.Z or X.Y.Z-suffix"
            exit 1
          fi

      - name: Generate release notes
        id: notes
        run: |
          # Generate release notes from commits
          cat > release_notes.md << 'EOF'
          # Release ${{ steps.version.outputs.version }}

          ## What's Changed

          EOF

          # Add commit history
          git log $(git describe --tags --abbrev=0)..HEAD \
            --pretty=format:"- %s (%h)" >> release_notes.md || \
          git log --pretty=format:"- %s (%h)" -n 20 >> release_notes.md

          # Add standard sections
          cat >> release_notes.md << 'EOF'

          ## Docker Images

          This release includes Docker images for both AMD64 and ARM64
          architectures:
          - `violentutf/violentutf:${{ steps.version.outputs.version }}`
          - `violentutf/violentutf_api:${{ steps.version.outputs.version }}`

          ## Installation

          See the [installation guide](docs/guides/Guide_Installation.md) for
          detailed instructions.

          ## Full Changelog

          https://github.com/${{ github.repository }}/compare/...v${{
          steps.version.outputs.version }}
          EOF

          # Save release notes
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  # Run comprehensive tests
  test-release:
    name: Test Release
    needs: validate
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  # Build and push Docker images
  build-docker:
    name: Build Docker Images
    needs: [validate, test-release]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        service: [violentutf, violentutf_api]
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v5.0.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349  # v3.11.1

      - name: Log in to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1  # v3.11.1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1  # v3.11.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            violentutf/${{ matrix.service }}:${{
            needs.validate.outputs.version }}
            violentutf/${{ matrix.service }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{
            needs.validate.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ needs.validate.outputs.version }}
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.sha }}

  # Create GitHub release
  create-release:
    name: Create Release
    needs: [validate, test-release, build-docker]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v5.0.0
      - name: Create release artifacts
        run: |
          # Create release directory
          mkdir -p release

          # Package source code
          git archive --format=tar.gz \
            --prefix=violentutf-${{ needs.validate.outputs.version }}/ \
            -o release/violentutf-${{ needs.validate.outputs.version }}-source.tar.gz \
            HEAD

          # Create checksums
          cd release
          sha256sum * > SHA256SUMS
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          tag_name: v${{ needs.validate.outputs.version }}
          name: ViolentUTF v${{ needs.validate.outputs.version }}
          body: ${{ needs.validate.outputs.release_notes }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}
          files: |
            release/*

      - name: Update latest tag
        if: github.event.inputs.prerelease != 'true'
        run: |
          git tag -f latest
          git push origin latest --force

  # Post-release notifications
  notify-release:
    name: Release Notifications
    needs: [validate, create-release]
    runs-on: ubuntu-22.04
    steps:
      - name: Send release notification
        run: |
          echo "Release v${{ needs.validate.outputs.version }} has been
          published!"
          echo "Docker images are available at:"
          echo "  - violentutf/violentutf:${{ needs.validate.outputs.version }}"
          echo "  - violentutf/violentutf_api:${{
          needs.validate.outputs.version }}"
