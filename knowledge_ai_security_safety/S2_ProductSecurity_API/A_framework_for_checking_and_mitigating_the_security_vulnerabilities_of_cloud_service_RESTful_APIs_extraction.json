{
  "sciknow-25x1-scientific-papers": [
    {
      "internal_id": "0a38b126c526469196bd3eb9b33c34b1",
      "title": "extract data from the POST request's body data = json.loads(request.body)",
      "authors": [
        {
          "name": "Md Shohel Khan"
        }
      ],
      "abstract": "Exploiting APIs by extrapolating out the vulnerabilities of a system is a trending issue for the cloud. The aftermath of API attacks includes sensitive data disclosure, misconfigured security parameters, broken authentication schemes, service disruption, financial loss, etc. Existing frameworks could handle a maximum of two issues in most cases (i.e., SQLIA, XSS attacks, malicious domain, DDoS attacks), and those solutions are not highly reliable. In contrast to them, we have pinpointed the security vulnerabilities of RESTful APIs in an accurate manner and presented a two-way approach to mitigate them. Moreover, we have also designed and implemented a reverse proxy that is capable of not only intercepting malicious attacks but also checking security properties upon creating or deleting resources which is an improved implementation of existing works. This system has been tested in a real cloud and our work has shown tremendous improvement in checking and mitigating SQL injection attacks, XSS attacks, and malicious domains over existing works. To check these three components, our framework consumes only 0.050298469s (Average). Our system has also shown significant improvement in figuring out potential security rule violations (up to 48.90% faster &amp; 47.82% accurate than existing work). Furthermore, we have implemented a machine-learning model to improve the detectability of SQLI.\n\nKeywords RESTful API 路 SQL injection attacks 路 XSS attacks 路 Malicious domain 路 Reverse proxy",
      "doi": "",
      "publicationDate": "2023",
      "journal": "A framework for checking and mitigating the security vulnerabilities of cloud service RESTful APIs\n\nMd Shohel Khan",
      "volume": "1",
      "issue": "",
      "pages": "",
      "keywords": [
        "RESTful API",
        "SQL injection attacks",
        "XSS attacks",
        "Malicious domain",
        "Reverse proxy"
      ],
      "pdfPath": "/Users/tamnguyen/Documents/AI-Safety_Privacy/S2_ProductSecurity_API/A framework for checking and mitigating the security vulnerabilities of cloud service RESTful APIs.pdf",
      "fileUrl": "",
      "extractionDate": "2025-04-30T22:12:02.809589",
      "extractionConfidenceScore": 0.8524
    }
  ],
  "sciknow-25x1-research-contexts": [
    {
      "internal_id": "775fbd75c4864a708e6223b0fa0f08d2",
      "discipline": "Computer Science",
      "fieldOfStudy": "Cloud Security, API Security, Machine Learning",
      "associatedProject": null,
      "fundingSources": [],
      "institutions": [
        {
          "name": "Department of Computer Science and Engineering, Bangladesh University of Engineering and Technology",
          "location": "Palashi, Dhaka 1205, Bangladesh"
        },
        {
          "name": "Department of Computer Science and Engineering, State University of Bangladesh",
          "location": "Dhanmondi, Dhaka 1205, Bangladesh"
        }
      ],
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1"
    }
  ],
  "sciknow-25x1-theoretical-bases": [
    {
      "internal_id": "7d1f90acc3a3475f984aeb6a30f96fa1",
      "underlyingTheories": [],
      "conceptualFrameworkReference": null,
      "guidingModels": [
        {
          "modelName": "RESTful API security model",
          "relevance": "The research presents a framework with enhanced protection ability for preserving the security and privacy of the clients and API server against RESTful API exploitation."
        },
        {
          "modelName": "Reverse proxy implementation model",
          "relevance": "The research includes the design and implementation of a reverse proxy capable of intercepting malicious attacks and checking security properties upon creating or deleting resources."
        },
        {
          "modelName": "Machine learning model for SQL injection detection",
          "relevance": "The research integrates a machine-learning model to improve the detectability of SQL injection attacks, achieving high accuracy."
        }
      ],
      "philosophicalParadigm": "Positivism",
      "schoolOfThought": "Information security and machine learning in cloud computing",
      "extractionConfidence": 0.6,
      "paper": "0a38b126c526469196bd3eb9b33c34b1"
    }
  ],
  "sciknow-25x1-research-problems": [
    {
      "internal_id": "fd41b9d785a24cedb30de693e9530924",
      "problemStatement": "The research addresses the problem of exploiting RESTful APIs by extrapolating out the vulnerabilities of a system in the cloud, which can lead to sensitive data disclosure, misconfigured security parameters, broken authentication schemes, service disruption, financial loss, etc.",
      "problemScope": "The scope includes security vulnerabilities of RESTful APIs, specifically SQL injection attacks, XSS attacks, and malicious domains.",
      "problemType": "DesignProblem",
      "problemImportance": "This problem is critical as it pertains to the security and privacy of cloud-based services, which are increasingly relied upon for various applications and data storage.",
      "businessRelevance": "Solving this problem has direct implications for businesses that rely on cloud services for their operations, as it can prevent financial losses, protect sensitive data, and ensure service continuity.",
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1"
    }
  ],
  "sciknow-25x1-knowledge-gaps": [],
  "sciknow-25x1-research-questions": [
    {
      "internal_id": "6f1382f3be234334a6e085f04eaef3d1",
      "questionText": "How can security vulnerabilities of RESTful APIs be accurately pinpointed and mitigated?",
      "questionType": "Applied",
      "relatedVariables": [
        {
          "variableName": "Security vulnerabilities",
          "variableRole": "Dependent"
        },
        {
          "variableName": "RESTful APIs",
          "variableRole": "Independent"
        }
      ],
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    },
    {
      "internal_id": "216e03c4ed0f42f1a7244dfb9db252ed",
      "questionText": "What is the performance of the proposed two-way approach in mitigating SQL injection attacks, XSS attacks, and malicious domains compared to existing works?",
      "questionType": "Comparative",
      "relatedVariables": [
        {
          "variableName": "Performance of two-way approach",
          "variableRole": "Dependent"
        },
        {
          "variableName": "SQL injection attacks",
          "variableRole": "Independent"
        },
        {
          "variableName": "XSS attacks",
          "variableRole": "Independent"
        },
        {
          "variableName": "Malicious domains",
          "variableRole": "Independent"
        }
      ],
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    },
    {
      "internal_id": "085008cad5144508bb88259d6a2602b4",
      "questionText": "How does the implemented reverse proxy improve the checking and mitigation of security rule violations?",
      "questionType": "Evaluative",
      "relatedVariables": [
        {
          "variableName": "Reverse proxy implementation",
          "variableRole": "Independent"
        },
        {
          "variableName": "Security rule violations",
          "variableRole": "Dependent"
        }
      ],
      "extractionConfidence": 0.85,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    },
    {
      "internal_id": "e1414222bcbe47539f9e2495e29e82a3",
      "questionText": "Can a machine-learning model improve the detectability of SQL injection attacks within the proposed framework?",
      "questionType": "Evaluative",
      "relatedVariables": [
        {
          "variableName": "Machine-learning model integration",
          "variableRole": "Independent"
        },
        {
          "variableName": "Detectability of SQL injection",
          "variableRole": "Dependent"
        }
      ],
      "extractionConfidence": 0.85,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    }
  ],
  "sciknow-25x1-future-directions": [
    {
      "internal_id": "6659a77aed3e477595cc329d3911d6bd",
      "directionDescription": "Implement a separate way to mitigate DDoS attacks.",
      "timeframe": "Not specified",
      "requiredResources": null,
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "extendsPotentialApplication": "79b562cd138f4760853583b1d43fb27a"
    },
    {
      "internal_id": "6e7a2c95b709489b968447aaa5c0e549",
      "directionDescription": "Train different datasets using different classification algorithms to analyze the attack surface in detail addressing various types of API attacks in the cloud and build solutions to these problems.",
      "timeframe": "Not specified",
      "requiredResources": null,
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "extendsPotentialApplication": "79b562cd138f4760853583b1d43fb27a"
    }
  ],
  "sciknow-25x1-potential-applications": [
    {
      "internal_id": "79b562cd138f4760853583b1d43fb27a",
      "applicationDescription": "An efficient framework to detect and mitigate vulnerabilities in RESTful APIs, protecting users and servers from security threats such as SQL injection attacks, XSS attacks, and malicious domains.",
      "targetSector": "Technology",
      "implementationReadiness": "Prototype",
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "buildOnMethodologicalFrameworks": [
        "d707c6553d1d47e6b1a661a16606f03c"
      ]
    },
    {
      "internal_id": "73898e8bee264a24a3516e2d3a2bf360",
      "applicationDescription": "A reverse proxy server implementation that ensures the privacy of client responses and generates warnings for system admins to take necessary measures in case of security breaches.",
      "targetSector": "Technology",
      "implementationReadiness": "Prototype",
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "buildOnMethodologicalFrameworks": [
        "d707c6553d1d47e6b1a661a16606f03c"
      ]
    },
    {
      "internal_id": "5974f4d0602a40e39db2a3b4e95a768e",
      "applicationDescription": "A machine learning model to improve the detectability of SQL injection, enhancing the security of cloud-based applications and services.",
      "targetSector": "Technology",
      "implementationReadiness": "Prototype",
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "buildOnMethodologicalFrameworks": [
        "d707c6553d1d47e6b1a661a16606f03c"
      ]
    },
    {
      "internal_id": "15759d0432504fb39873aa8bf72e5342",
      "applicationDescription": "A framework that is resistant to DDoS attacks, capable of protecting systems for a significant amount of time without a sole prevention mechanism.",
      "targetSector": "Technology",
      "implementationReadiness": "Prototype",
      "extractionConfidence": 0.85,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "buildOnMethodologicalFrameworks": [
        "d707c6553d1d47e6b1a661a16606f03c"
      ]
    },
    {
      "internal_id": "bb6c0f75d27047f2abb3bc3dddce84ec",
      "applicationDescription": "A plug-and-play framework that does not require rewriting upon changing platforms, facilitating easier adoption across different technological environments.",
      "targetSector": "Technology",
      "implementationReadiness": "Prototype",
      "extractionConfidence": 0.85,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "buildOnMethodologicalFrameworks": [
        "d707c6553d1d47e6b1a661a16606f03c"
      ]
    }
  ],
  "sciknow-25x1-scientific-challenges": [
    {
      "internal_id": "a221bf76071f45d18d44dcf7d58eb298",
      "challengeDescription": "Ensuring security and privacy in RESTful API to protect against various attacks such as SQL injection, XSS, and malicious domains.",
      "challengeType": "ComplexityChallenge",
      "severity": "Major",
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    },
    {
      "internal_id": "d05704435c7d450aa15365624100b533",
      "challengeDescription": "Developing a generalized system that can prevent different types of malicious attempts and is adaptable to various datasets and attack patterns.",
      "challengeType": "ScaleChallenge",
      "severity": "Major",
      "extractionConfidence": 0.8,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    },
    {
      "internal_id": "01b47c06f95e4181ada04ae8cb0bc5ee",
      "challengeDescription": "Configuring existing security frameworks and reverse proxy servers to effectively mitigate security vulnerabilities.",
      "challengeType": "ComplexityChallenge",
      "severity": "Moderate",
      "extractionConfidence": 0.7,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    },
    {
      "internal_id": "294617c98b70433da2e7c7ad7031f973",
      "challengeDescription": "Integrating machine learning models into security frameworks to improve detectability of SQL injection and potentially other types of attacks.",
      "challengeType": "MultidisciplinaryChallenge",
      "severity": "Moderate",
      "extractionConfidence": 0.75,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    },
    {
      "internal_id": "5af3190087fe4f7da77ca7f04d79cf44",
      "challengeDescription": "Handling the intrinsic randomness and emergent behavior of security attacks, which require dynamic and adaptive defense mechanisms.",
      "challengeType": "EmergentBehavior",
      "severity": "Major",
      "extractionConfidence": 0.85,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "relatedProblem": "fd41b9d785a24cedb30de693e9530924"
    }
  ],
  "sciknow-25x1-methodological-challenges": [],
  "sciknow-25x1-implementation-challenges": [],
  "sciknow-25x1-limitations": [],
  "sciknow-25x1-methodological-frameworks": [
    {
      "internal_id": "d707c6553d1d47e6b1a661a16606f03c",
      "name": "Enhanced Security Framework for RESTful API Exploitation Prevention",
      "description": "The paper presents a methodological framework for enhancing the security of RESTful APIs against common vulnerabilities such as SQL injection attacks, XSS attacks, and malicious domains. The framework includes the design and implementation of a reverse proxy capable of intercepting malicious attacks and checking security properties upon creating or deleting resources. Additionally, a machine-learning model is integrated to improve the detectability of SQL injection attacks.",
      "studyDesign": {
        "designType": "Experimental",
        "controlGroup": false,
        "randomization": false,
        "blinding": null,
        "timeDimension": "CrossSectional",
        "designDetails": "The study involves the deployment of a reverse proxy and a machine-learning model in a real cloud environment to test the effectiveness of the proposed security framework."
      },
      "variables": [],
      "procedures": [
        {
          "procedureName": "Active Phase",
          "steps": [
            {
              "stepNumber": 1,
              "description": "Intercept HTTP requests and responses between the client and the RESTful API server.",
              "inputs": "HTTP requests and responses",
              "outputs": "Logs of all requests and responses",
              "parameters": {}
            },
            {
              "stepNumber": 2,
              "description": "Check for SQL injection, XSS, and malicious domains using predefined patterns and a dataset of malicious domains.",
              "inputs": "HTTP requests and responses",
              "outputs": "Identification of malicious attempts",
              "parameters": {}
            }
          ],
          "procedureDescription": "In the active phase, the reverse proxy checks every request and response for SQL injection, XSS, and malicious domains. It operates in two modes: Default Mode for logging all requests and responses, and Attack Checking Mode for actively checking and intercepting malicious attempts."
        },
        {
          "procedureName": "Passive Phase",
          "steps": [
            {
              "stepNumber": 1,
              "description": "Analyze create or delete requests to decide which security rule violation to check.",
              "inputs": "Create or delete requests",
              "outputs": "Decision on rule violation checks",
              "parameters": {}
            },
            {
              "stepNumber": 2,
              "description": "Request the reverse proxy server to check for specific rule violations and return the result.",
              "inputs": "Request for rule violation check",
              "outputs": "Flag indicating the presence of a rule violation",
              "parameters": {}
            }
          ],
          "procedureDescription": "The passive phase is triggered when the REST API server receives a create or delete request. It checks for potential access control rule violations based on improved implementations of existing security rules."
        }
      ],
      "dataAnalysis": {
        "analysisApproach": "StatisticalAnalysis",
        "statisticalTests": null,
        "algorithmsUsed": "Support Vector Classification algorithm for the machine-learning model.",
        "softwareDetails": null,
        "parameterSettings": null,
        "dataPreprocessingSteps": null,
        "summary": "The data analysis involved testing the system with 1000 requests to evaluate the active phase and conducting tests to assess the passive phase. The performance was measured in terms of time taken to process requests and the accuracy of the machine-learning model in detecting SQL injection attacks."
      },
      "extractionConfidence": 0.9,
      "paper": "0a38b126c526469196bd3eb9b33c34b1",
      "researchProblem": "fd41b9d785a24cedb30de693e9530924"
    }
  ],
  "sciknow-25x1-material-tools": [
    {
      "internal_id": "b817bdd4cf9c4640b7cecab4adac3cfa",
      "itemName": "Hammer",
      "itemType": "Tool",
      "identifier": "HMR-001",
      "specifications": "Steel, 16oz",
      "roleInProcedure": "Used to drive nails into wood",
      "extractionConfidence": 0.9,
      "usedInFrameworks": [
        "d707c6553d1d47e6b1a661a16606f03c"
      ]
    }
  ]
}