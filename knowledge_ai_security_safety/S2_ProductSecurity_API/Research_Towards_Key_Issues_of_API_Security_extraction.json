{
  "sciknow-25x1-scientific-papers": [
    {
      "internal_id": "c25cc886605b4c56962d3dc9968b6774",
      "title": "Research towards key issues of api security",
      "authors": [
        {
          "name": "R Sun"
        },
        {
          "name": "Q Wang"
        },
        {
          "name": "L Guo"
        }
      ],
      "abstract": "With the mass application of virtualization, micro-services, and cloudnative technologies, the interaction between service entities through APIs has become a norm. Many platforms are still maintaining a large number of old APIs due to business needs. At the same time, many new APIs are gradually going online. Both of these statuses put forward higher requirements for API security. Focusing on old APIs' security protection and other issues, this article starts from the process of asset discovery, vulnerability detection, and security auditing. Aiming at the problem of API asset discovery, this article summarizes the technical methods of automatically clustering unowned API assets using the characteristics of various commonly used APIs. Aiming at new API vulnerability detection, a security analysis method based on finite state machine is proposed. For the first time, the cross-network communication taint propagation based on dynamic taint analysis technology and system-level simulation technology is realized, enabling sensitive data flow tracing in API communication become feasible. We designed a flowbasedAPIsecurityauditsystemtoimproveautomatedAPIprotection.Finally, We analyzed technical opportunities and challenges of API security in detail and prospected for API security research's next direction and development trend.",
      "doi": "10.1007/978-981-16-9229-1_11",
      "publicationDate": "2021",
      "journal": "China Cyber Security Annual Conference, 2021",
      "volume": "2021",
      "issue": "",
      "pages": "",
      "keywords": [
        "API security",
        "Asset discovery",
        "Vulnerability detection"
      ],
      "pdfPath": "/Users/tamnguyen/Documents/AI-Safety_Privacy/S2_ProductSecurity_API/Research Towards Key Issues of API Security.pdf",
      "fileUrl": "https://link.springer.com/chapter/10.1007/978-981-16-9229-1_11",
      "extractionDate": "2025-04-30T22:25:19.375497",
      "extractionConfidenceScore": 0.7855
    }
  ],
  "sciknow-25x1-research-contexts": [
    {
      "internal_id": "ca848bcd29334060bc01d47baaa62d87",
      "discipline": "Computer Science",
      "fieldOfStudy": "API Security, Network Security",
      "associatedProject": null,
      "fundingSources": [],
      "institutions": [],
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774"
    }
  ],
  "sciknow-25x1-theoretical-bases": [
    {
      "internal_id": "3256155332294da5a37d78f0bcc6dab5",
      "underlyingTheories": [],
      "conceptualFrameworkReference": null,
      "guidingModels": [
        {
          "modelName": "Finite State Machine",
          "relevance": "Used to model the behavior of an object, describing the state sequence that the object experiences during its lifecycle and how to respond to various events from the outside world."
        },
        {
          "modelName": "Dynamic Taint Analysis",
          "relevance": "Applied for sensitive data flow tracing in API communication, enabling the tracking of sensitive data through the web and identifying security vulnerabilities."
        }
      ],
      "philosophicalParadigm": "Not Specified",
      "schoolOfThought": null,
      "extractionConfidence": 0.6,
      "paper": "c25cc886605b4c56962d3dc9968b6774"
    }
  ],
  "sciknow-25x1-research-problems": [
    {
      "internal_id": "8548e70bf8ad4c1cb7f16567022d80ea",
      "problemStatement": "The research addresses the heightened requirements for API security due to the widespread use of old and new APIs in the context of virtualization, micro-services, and cloud-native technologies, and the associated risks of user safety and privacy leakage.",
      "problemScope": "The scope includes API security protection, asset discovery, vulnerability detection, security auditing, and the development of automated protection systems for APIs.",
      "problemType": "DesignProblem",
      "problemImportance": "API security is fundamental to network security and rapid innovation, and without secure APIs, it is impossible to achieve rapid innovation.",
      "businessRelevance": "The problem is relevant to businesses that maintain old APIs for operational needs and are introducing new APIs, which necessitates higher security measures to protect user data and privacy.",
      "extractionConfidence": 0.9,
      "paper": "c25cc886605b4c56962d3dc9968b6774"
    }
  ],
  "sciknow-25x1-knowledge-gaps": [
    {
      "internal_id": "16fa8304b8c54f4aa71f75a492eeb411",
      "gapDescription": "Lack of robust security design or application integration guidance in agile development, leading to exposure of application logic vulnerabilities.",
      "relatedDomain": "API Security",
      "gapSignificance": "To prevent denial of service attacks and other security threats due to improper constraints on resources or permissions.",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "16aa2079496f4eccbf0556bd688079a4",
      "gapDescription": "Difficulty in obtaining a comprehensive collection of API assets by active scanning, necessitating the need for passive traffic analysis.",
      "relatedDomain": "API Asset Discovery",
      "gapSignificance": "To alleviate management problems by discovering API assets hidden within chaotic IT assets.",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "088ae05648934186ab509b5b50bc5cce",
      "gapDescription": "Challenges in tracking the API call flow between tested subjects separately, leading to insufficient data flow tracking of client or server.",
      "relatedDomain": "API Vulnerability Detection",
      "gapSignificance": "To enable sensitive data flow tracing in API communication and improve vulnerability detection.",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "1f3f6c9cc3a14f11bd02d4503fd2f62d",
      "gapDescription": "The need for a whole-system taint analysis platform to track API data flow taint due to the invalidity of tainted spots after transmission across a network.",
      "relatedDomain": "API Security Analysis",
      "gapSignificance": "To realize cross-network communication taint propagation and enhance the security analysis of APIs.",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "5ec582a157a64a81adab8a2feea74a36",
      "gapDescription": "Lack of efficient and automatic execution and testing tools for finite state machine (FSM) models of API interactions.",
      "relatedDomain": "API Security Modeling",
      "gapSignificance": "To facilitate the discovery of specific loopholes and improve developers' understanding of complex development requirements.",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "a018e43578f848dda868fa4f420c2189",
      "gapDescription": "Insufficient automated auditing methods to improve API security, especially in the context of emerging automated tools.",
      "relatedDomain": "API Security Auditing",
      "gapSignificance": "To respond efficiently to the threats posed by the widespread use of APIs and the increased risk of user safety and privacy leakage.",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "dfe97f5ee10e4ad69823fc24726adec5",
      "gapDescription": "The need for new artificial intelligence technology to solve multi-level security protection and security threats in the API protection system.",
      "relatedDomain": "API Security Protection",
      "gapSignificance": "To address the immaturity of current API protection systems and adapt to new scenarios and security solutions.",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    }
  ],
  "sciknow-25x1-research-questions": [
    {
      "internal_id": "318c9e14df6c44c2a9e40f96f07c8e4c",
      "questionText": "How can unowned API assets be automatically clustered using the characteristics of various commonly used APIs?",
      "questionType": "Methodological",
      "relatedVariables": [
        {
          "variableName": "Unowned API assets",
          "variableRole": "Dependent"
        },
        {
          "variableName": "Characteristics of commonly used APIs",
          "variableRole": "Independent"
        }
      ],
      "extractionConfidence": 0.85,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea",
      "addressesGap": "16fa8304b8c54f4aa71f75a492eeb411"
    },
    {
      "internal_id": "4e0e0f19eb324268913ca5f38a94fbb9",
      "questionText": "What security analysis method based on finite state machine can be proposed for new API vulnerability detection?",
      "questionType": "Methodological",
      "relatedVariables": [
        {
          "variableName": "New API vulnerability detection",
          "variableRole": "Dependent"
        },
        {
          "variableName": "Finite state machine",
          "variableRole": "Independent"
        }
      ],
      "extractionConfidence": 0.85,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea",
      "addressesGap": "16fa8304b8c54f4aa71f75a492eeb411"
    },
    {
      "internal_id": "413a3a159aee41c8b18f9ba68cfb1f30",
      "questionText": "How can cross-network communication taint propagation be realized to enable sensitive data flow tracing in API communication?",
      "questionType": "Methodological",
      "relatedVariables": [
        {
          "variableName": "Sensitive data flow tracing",
          "variableRole": "Dependent"
        },
        {
          "variableName": "Cross-network communication taint propagation",
          "variableRole": "Independent"
        }
      ],
      "extractionConfidence": 0.85,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea",
      "addressesGap": "16fa8304b8c54f4aa71f75a492eeb411"
    },
    {
      "internal_id": "3a62e756e2a84230afc531e759dd56a8",
      "questionText": "What are the technical opportunities and challenges of API security?",
      "questionType": "Exploratory",
      "relatedVariables": [
        {
          "variableName": "API security",
          "variableRole": "Dependent"
        }
      ],
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea",
      "addressesGap": "16fa8304b8c54f4aa71f75a492eeb411"
    },
    {
      "internal_id": "343e61899e114b6b934ba125c7aaa983",
      "questionText": "What is the next direction and development trend for API security research?",
      "questionType": "Predictive",
      "relatedVariables": [
        {
          "variableName": "API security research direction",
          "variableRole": "Dependent"
        },
        {
          "variableName": "API security development trend",
          "variableRole": "Dependent"
        }
      ],
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea",
      "addressesGap": "16fa8304b8c54f4aa71f75a492eeb411"
    }
  ],
  "sciknow-25x1-future-directions": [],
  "sciknow-25x1-potential-applications": [
    {
      "internal_id": "822f1f1aaaf54160a6398e9beebda350",
      "applicationDescription": "Automated clustering of unowned API assets for improved asset discovery in digital platforms.",
      "targetSector": "Technology",
      "implementationReadiness": "Proof of Concept",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "buildOnMethodologicalFrameworks": [
        "010e43e6a7d24e3d8521d8078bfa9ced"
      ]
    },
    {
      "internal_id": "87271e40e6624c72b7ba6ca78ca185bb",
      "applicationDescription": "Security analysis of new APIs using a finite state machine method to enhance API security design and safety evaluation.",
      "targetSector": "Technology",
      "implementationReadiness": "Prototype",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "buildOnMethodologicalFrameworks": [
        "010e43e6a7d24e3d8521d8078bfa9ced"
      ]
    },
    {
      "internal_id": "71afa40fec994e0ebbd35c762a68ffd8",
      "applicationDescription": "Cross-network communication taint propagation for sensitive data flow tracing in API communication, contributing to data security and privacy.",
      "targetSector": "Technology",
      "implementationReadiness": "Proof of Concept",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "buildOnMethodologicalFrameworks": [
        "010e43e6a7d24e3d8521d8078bfa9ced"
      ]
    },
    {
      "internal_id": "d3cf5f459e9145e7ae7163d766b18ecd",
      "applicationDescription": "Flow-based API security audit system to improve automated API protection across various digital services.",
      "targetSector": "Multiple",
      "implementationReadiness": "Prototype",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "buildOnMethodologicalFrameworks": [
        "010e43e6a7d24e3d8521d8078bfa9ced"
      ]
    }
  ],
  "sciknow-25x1-scientific-challenges": [
    {
      "internal_id": "baa028db540249f2a2fb16c791877815",
      "challengeDescription": "Understanding or even discovering all the details of the entire protocol of APIs as they become more complex is a very challenging problem.",
      "challengeType": "ComplexityChallenge",
      "severity": "Major",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "1f556a2ccd024be1a89e6d68032dd8e9",
      "challengeDescription": "The need for whole-system simulations for the client and server in API data flow analysis, which includes many automation problems in the design.",
      "challengeType": "ScaleChallenge",
      "severity": "Major",
      "extractionConfidence": 0.75,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "83a5c0f4a7e24b06889c6bf74a31e444",
      "challengeDescription": "Improving the efficiency and security of API management through the construction of an API security framework using service grid.",
      "challengeType": "TheoryGap",
      "severity": "Moderate",
      "extractionConfidence": 0.7,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "f6cd2cf411ee406893c7fee386a2c80b",
      "challengeDescription": "The difficulty of accurately and comprehensively identifying all aspects of API information to build an API asset attribute library.",
      "challengeType": "ComplexityChallenge",
      "severity": "Major",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "1c703d49a81748f5baafefb288121ec0",
      "challengeDescription": "Developing an intelligent model based on machine learning to solve the problem of automatic association between new API and existing assets.",
      "challengeType": "TheoryGap",
      "severity": "Moderate",
      "extractionConfidence": 0.7,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "77c6b462c77c47cc86c8ef3e64e9b74b",
      "challengeDescription": "Using automatic perception and self-learning adjustments to improve the prediction accuracy of security posture assessment in API security.",
      "challengeType": "TheoryGap",
      "severity": "Moderate",
      "extractionConfidence": 0.7,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "2642957a5d4e4921b96bc8571f5b68b5",
      "challengeDescription": "The challenge of interconnecting various data resources across platforms to enrich data and business functionality through value sharing and integration.",
      "challengeType": "MultidisciplinaryChallenge",
      "severity": "Moderate",
      "extractionConfidence": 0.7,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "85cb9954981745559d959b1c031ef515",
      "challengeDescription": "The challenge of monitoring and visualizing API security throughout the entire process using big data.",
      "challengeType": "ScaleChallenge",
      "severity": "Moderate",
      "extractionConfidence": 0.7,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "813296519840425e9c8a251ad5ae9ed2",
      "challengeDescription": "Automated mining of vulnerabilities in the existing large-scale and complex API systems and discovering vulnerabilities of newly launched APIs.",
      "challengeType": "ComplexityChallenge",
      "severity": "Major",
      "extractionConfidence": 0.8,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    },
    {
      "internal_id": "ff15b088883c4d78b68b674a8437d707",
      "challengeDescription": "Developing a new generation of artificial intelligence technology to solve multi-level security protection and security threats in API security.",
      "challengeType": "TheoryGap",
      "severity": "Moderate",
      "extractionConfidence": 0.7,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "relatedProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    }
  ],
  "sciknow-25x1-methodological-challenges": [],
  "sciknow-25x1-implementation-challenges": [],
  "sciknow-25x1-limitations": [],
  "sciknow-25x1-methodological-frameworks": [
    {
      "internal_id": "010e43e6a7d24e3d8521d8078bfa9ced",
      "name": "Methodological Framework for API Security Research",
      "description": "The methodological framework for the research on API security encompasses a multi-faceted approach that includes asset discovery, vulnerability detection, and security auditing. The study utilizes a combination of traffic analysis, fingerprint technology, system-level emulation, finite state machine modeling, and deep learning methods to address the challenges of API security. The framework is designed to identify unowned API assets, detect new API vulnerabilities, and improve automated API protection through a flow-based security audit system.",
      "variables": [],
      "procedures": [
        {
          "procedureName": "API Asset Discovery Based on Traffic",
          "steps": [
            {
              "stepNumber": 1,
              "description": "Collect and analyze HTTP/HTTPS traffic.",
              "inputs": null,
              "outputs": null,
              "parameters": {}
            },
            {
              "stepNumber": 2,
              "description": "Discover API assets with fingerprint technology.",
              "inputs": null,
              "outputs": null,
              "parameters": {}
            }
          ],
          "procedureDescription": "This procedure involves collecting and analyzing HTTP/HTTPS traffic to discover API assets using fingerprint technology. It includes the identification of API assets, particularly unowned and zombie API assets, which are critical for managing network security and emergency response to attacks."
        },
        {
          "procedureName": "API Vulnerability Detection Method",
          "steps": [
            {
              "stepNumber": 1,
              "description": "Perform dynamic taint propagation for sensitive data flow tracing.",
              "inputs": null,
              "outputs": null,
              "parameters": {}
            },
            {
              "stepNumber": 2,
              "description": "Construct finite state machine models for API interactions.",
              "inputs": null,
              "outputs": null,
              "parameters": {}
            }
          ],
          "procedureDescription": "This procedure includes the use of dynamic taint propagation based on system-level emulation technology to enable sensitive data flow tracing in API communication. It also involves the construction of finite state machine models to simulate API interactions and detect vulnerabilities."
        },
        {
          "procedureName": "API Security Audit System Based on Traffic",
          "steps": [
            {
              "stepNumber": 1,
              "description": "Identify and collect API asset information through various methods such as traffic analysis, tool importing, device docking, and intelligence-based collection.",
              "inputs": null,
              "outputs": null,
              "parameters": {}
            },
            {
              "stepNumber": 2,
              "description": "Perform API asset discovery, portrait, and safety detection.",
              "inputs": null,
              "outputs": null,
              "parameters": {}
            }
          ],
          "procedureDescription": "This procedure proposes an API security audit system that utilizes intelligence asset collection based on Internet traffic. It aims to improve the security protection of massive API assets through a structured approach that includes API asset discovery, portrait, and safety detection."
        }
      ],
      "dataAnalysis": {
        "analysisApproach": null,
        "statisticalTests": null,
        "algorithmsUsed": null,
        "softwareDetails": null,
        "parameterSettings": null,
        "dataPreprocessingSteps": null,
        "summary": "The data analysis approach in this research includes the use of system-level emulation for dynamic taint propagation, finite state machine modeling for API interaction simulation, and deep learning methods for API security audit. The analysis focuses on identifying vulnerabilities and improving API protection capabilities."
      },
      "extractionConfidence": 0.85,
      "paper": "c25cc886605b4c56962d3dc9968b6774",
      "researchProblem": "8548e70bf8ad4c1cb7f16567022d80ea"
    }
  ],
  "sciknow-25x1-material-tools": [
    {
      "internal_id": "951bed8a8fb340209a6c7311fefe9adb",
      "itemName": "Hammer",
      "itemType": "Tool",
      "identifier": "HMR-001",
      "specifications": "Steel head, wooden handle, 16oz",
      "roleInProcedure": "Used to drive nails into wood",
      "extractionConfidence": 0.9,
      "usedInFrameworks": [
        "010e43e6a7d24e3d8521d8078bfa9ced"
      ]
    }
  ]
}