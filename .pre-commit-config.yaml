---
# Pre-commit hooks for ViolentUTF
# Run manually: pre-commit run --all-files
# Install: pre-commit install

default_language_version:
  python: python3.12

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-added-large-files
        args: ["--maxkb=5000"]
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'
      - id: check-ast
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'
      - id: check-case-conflict
      - id: check-docstring-first
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: check-yaml
        args: ["--allow-multiple-documents"]
      - id: debug-statements
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: name-tests-test
        args: ["--pytest-test-first"]
        exclude: "_helper\\.py$|_util\\.py$|keycloak_auth_helper\\.py$|contract_test_helper\\.py$"
      - id: requirements-txt-fixer
      - id: trailing-whitespace
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # Python code formatting - Match GitHub PR validation exactly
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3.12
        args: ["--check", "--diff", ".", "--verbose"]
        # Uses pyproject.toml configuration for exclusions and line-length
        pass_filenames: false
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # Import sorting - Match GitHub PR validation exactly
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ["--check-only", "--diff", "."]
        # Uses pyproject.toml configuration
        pass_filenames: false
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # Linting - Match GitHub PR validation exactly
  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        args: ["--count", "--statistics", "--show-source", "--config=.flake8"]
        additional_dependencies: ["flake8-docstrings", "flake8-annotations"]
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # Security checks - Match GitHub PR validation exactly
  - repo: https://github.com/pycqa/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args:
          [
            "-r",
            "violentutf",
            "violentutf_api",
            "scripts",
            "apisix",
            "--configfile",
            "pyproject.toml",
            "--quiet",
          ]
        # Uses pyproject.toml configuration for exclusions
        pass_filenames: false
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # Type checking - Match GitHub PR validation exactly
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        args:
          [
            "--install-types",
            "--non-interactive",
            "--explicit-package-bases",
            ".",
          ]
        additional_dependencies: ["types-requests", "types-PyYAML"]
        # Uses pyproject.toml configuration for exclusions
        pass_filenames: false
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # PyLint - Match GitHub PR validation exactly
  - repo: https://github.com/pycqa/pylint
    rev: v3.3.8
    hooks:
      - id: pylint
        args: ["--rcfile=.pylintrc"]
        # Only run on non-test Python files like GitHub
        files: '^(?!.*tests/).*\.py$'

  # Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: ["--fix", "--disable", "MD013", "MD033"]
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

# YAML formatting removed - prettier causing file modification issues

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.11.0.1
    hooks:
      - id: shellcheck
        args: ["--severity=error"]
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint-docker
        args: ["--ignore", "DL3008", "--ignore", "DL3009"]
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # Secret detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|app/mcp/tests/|app/core/security_logging.py|app/core/password_policy.py|pages/Simple_Chat.py|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

  # License headers
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: insert-license
        name: Add license header (Python)
        files: \.py$
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|__pycache__/|migrations/|build/|dist/|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/)'
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - "#"
          - --skip-license-insertion-comment
          - "# Copyright (c) Microsoft Corporation."

  # Custom local hooks
  - repo: local
    hooks:
      # CRITICAL: Regex pattern protection
      - id: check-regex-patterns
        name: Check Regex Patterns (prevent corruption)
        entry: python scripts/check_regex_patterns.py
        language: python
        files: '\.py$'
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'
        pass_filenames: true
        description: "Prevent corruption of regex patterns by auto-formatting"

      - id: no-print-statements
        name: Check for print statements
        entry: '(?<!def )print\('
        language: pygrep
        types: [python]
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|setup.py|scripts/|debug_auth_flow.py|debug_openapi_auth.py|apisix/configure_gateway_auth.py|diagnose_user_context.py|app/core/security_check.py|app/services/pyrit_orchestrator_service.py|safe_comprehensive_fix.py|violentutf/utils/logging.py|violentutf_api/fastapi_app/diagnose_user_context.py|violentutf_api/fastapi_app/app/core/security_check\.py|violentutf_api/fastapi_app/verify_redteam_install\.py|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

      - id: no-hardcoded-secrets
        name: Check for hardcoded secrets
        entry: '(api_key|apikey|password|secret|token|private_key)=.*["\x27].*["\x27]'
        language: pygrep
        types: [python]
        exclude: '^(tests/|test/|.*tests.*|.*test.*|test_.*|.*_test\.py$|ai-tokens.env.sample|violentutf_api/fastapi_app/app/api/endpoints/auth.py|violentutf_api/fastapi_app/app/api/endpoints/generators.py|violentutf_api/fastapi_app/app/api/endpoints/jwt_keys.py|violentutf/pages/Simple_Chat.py|venv/|\.venv/|env/|\.env/|ENV/|\.vitutf/|\.virtualenv/|\.conda/|__pycache__/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.tox/|\.nox/|\.cache/|build/|dist/|\.eggs/|node_modules/|tmp/|temp/|\.tmp/|\.temp/|app_data/|violentutf_logs/|migrations/)'

      - id: validate-requirements
        name: Validate requirements files
        entry: >
          bash -c 'for f in $(find . -name "requirements*.txt" -type f); do
          grep -E "^[^#]" "$f" | grep -qE "^[a-zA-Z0-9]" ||
          echo "Empty or invalid requirements file: $f"; done'
        language: system
        pass_filenames: false

      - id: check-github-actions
        name: Validate GitHub Actions workflows
        entry: yamllint -c .yamllint
        language: system
        files: '^\.github/workflows/.*\.(yml|yaml)$'

      # Docker compose validation disabled - requires specific .env files per directory
      # - id: check-docker-compose
      #   name: Validate docker-compose files
      #   entry: docker compose config --quiet
      #   language: system
      #   files: 'docker-compose.*\.ya?ml$'
      #   pass_filenames: true

      - id: check-pyproject-toml
        name: Validate pyproject.toml
        entry: python3 -c "import tomllib; tomllib.load(open('pyproject.toml', 'rb'))"
        language: system
        files: '^pyproject\.toml$'
        pass_filenames: false
